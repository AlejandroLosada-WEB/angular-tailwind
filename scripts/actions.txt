import { createAction, props } from '@ngrx/store'
import { User } from './user.model'

// Acciones para cargar todos los usuarios
export const loadUsers = createAction('[User] Load Users')
export const loadUsersSuccess = createAction(
  '[User] Load Users Success',
  props<{ users: User[] }>()
)
export const loadUsersFailure = createAction(
  '[User] Load Users Failure',
  props<{ error: string }>()
)

// Acciones para buscar un usuario por su ID
export const findUserById = createAction(
  '[User] Find User By ID',
  props<{ id: string }>()
)
export const findUserByIdSuccess = createAction(
  '[User] Find User By ID Success',
  props<{ user: User }>()
)
export const findUserByIdFailure = createAction(
  '[User] Find User By ID Failure',
  props<{ error: string }>()
)

// Acciones para crear un nuevo usuario
export const createUser = createAction(
  '[User] Create User',
  props<{ user: User }>()
)
export const createUserSuccess = createAction(
  '[User] Create User Success',
  props<{ user: User }>()
)
export const createUserFailure = createAction(
  '[User] Create User Failure',
  props<{ error: string }>()
)

// Acciones para actualizar un usuario existente
export const updateUser = createAction(
  '[User] Update User',
  props<{ user: User }>()
)
export const updateUserSuccess = createAction(
  '[User] Update User Success',
  props<{ user: User }>()
)
export const updateUserFailure = createAction(
  '[User] Update User Failure',
  props<{ error: string }>()
)

// Acciones para eliminar un usuario
export const deleteUser = createAction(
  '[User] Delete User',
  props<{ id: string }>()
)
export const deleteUserSuccess = createAction(
  '[User] Delete User Success',
  props<{ id: string }>()
)
export const deleteUserFailure = createAction(
  '[User] Delete User Failure',
  props<{ error: string }>()
)
